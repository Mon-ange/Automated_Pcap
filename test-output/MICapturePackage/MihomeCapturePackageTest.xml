<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-BON9LB6" failures="0" tests="9" name="MihomeCapturePackageTest" time="28.423" errors="0" timestamp="19 Oct 2022 16:01:41 GMT">
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeClass setup" time="0.0">
    <failure type="java.lang.ExceptionInInitializerError">
      <![CDATA[java.lang.ExceptionInInitializerError
	at io.appium.java_client.pagefactory.utils.ProxyFactory.getEnhancedProxy(ProxyFactory.java:52)
	at io.appium.java_client.pagefactory.utils.ProxyFactory.getEnhancedProxy(ProxyFactory.java:33)
	at io.appium.java_client.pagefactory.AppiumFieldDecorator.proxyForAnElement(AppiumFieldDecorator.java:222)
	at io.appium.java_client.pagefactory.AppiumFieldDecorator.access$0(AppiumFieldDecorator.java:220)
	at io.appium.java_client.pagefactory.AppiumFieldDecorator$1.proxyForLocator(AppiumFieldDecorator.java:105)
	at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
	at io.appium.java_client.pagefactory.AppiumFieldDecorator.decorate(AppiumFieldDecorator.java:160)
	at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
	at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
	at pages.common.Page.<init>(Page.java:30)
	at pages.mihome.mainpage.initialization.MihomeInitializationPage.<init>(MihomeInitializationPage.java:9)
	at autobusinesstest.pcaptest.MihomeCapturePackageTest.setup(MihomeCapturePackageTest.java:44)
	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
	at net.sf.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:464)
	at net.sf.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:339)
	at net.sf.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:96)
	at net.sf.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:94)
	at net.sf.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at net.sf.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61)
	at net.sf.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)
	at net.sf.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:119)
	at net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:294)
	at net.sf.cglib.core.KeyFactory$Generator.create(KeyFactory.java:221)
	at net.sf.cglib.core.KeyFactory.create(KeyFactory.java:174)
	at net.sf.cglib.core.KeyFactory.create(KeyFactory.java:153)
	at net.sf.cglib.proxy.Enhancer.<clinit>(Enhancer.java:73)
	... 33 more
	at net.sf.cglib.core.ReflectUtils$1.run(ReflectUtils.java:61)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at net.sf.cglib.core.ReflectUtils.<clinit>(ReflectUtils.java:52)
	at net.sf.cglib.core.KeyFactory$Generator.generateClass(KeyFactory.java:243)
	at net.sf.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)
	at net.sf.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:332)
	... 45 more
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="@BeforeMethod reboot" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod reboot -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="addDeviceTest" time="0.001">
    <skipped/>
  </testcase> <!-- addDeviceTest -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="downloadVoiceTest" time="0.0">
    <skipped/>
  </testcase> <!-- downloadVoiceTest -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="normalCleanTest" time="0.0">
    <skipped/>
  </testcase> <!-- normalCleanTest -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="firmwareUpdateTest" time="0.0">
    <skipped/>
  </testcase> <!-- firmwareUpdateTest -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="updatedCleanTest" time="0.0">
    <skipped/>
  </testcase> <!-- updatedCleanTest -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="sheduledCleanTest" time="0.0">
    <skipped/>
  </testcase> <!-- sheduledCleanTest -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="remoteControlTest" time="0.0">
    <skipped/>
  </testcase> <!-- remoteControlTest -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="maintenanceTest" time="0.0">
    <skipped/>
  </testcase> <!-- maintenanceTest -->
  <testcase classname="autobusinesstest.pcaptest.MihomeCapturePackageTest" name="errorImageTest" time="0.0">
    <skipped/>
  </testcase> <!-- errorImageTest -->
</testsuite> <!-- MihomeCapturePackageTest -->
